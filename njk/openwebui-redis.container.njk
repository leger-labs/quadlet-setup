{% import "macros.njk" as m -%}
[Unit]
Description=Redis cache for Open WebUI
After=network-online.target {{ infrastructure.network.name }}.network.service
Requires={{ infrastructure.network.name }}.network.service

[Container]
Image={{ infrastructure.services.openwebui_redis.image }}
AutoUpdate=registry
ContainerName={{ infrastructure.services.openwebui_redis.container_name }}

# ═════════════════════════════════════════════════════════════════════════════
# 🌐 NETWORK - Internal only, no published ports
# ═════════════════════════════════════════════════════════════════════════════
Network={{ infrastructure.network.name }}.network

# ═════════════════════════════════════════════════════════════════════════════
# 🔐 ENVIRONMENT - No password needed (internal only)
# ═════════════════════════════════════════════════════════════════════════════
{{ m.redisEnv() }}

# ═════════════════════════════════════════════════════════════════════════════
# 💾 VOLUME
# ═════════════════════════════════════════════════════════════════════════════
{{ m.volumeMount(infrastructure.services.openwebui_redis.volume, "/data") }}

# ═════════════════════════════════════════════════════════════════════════════
# 🔧 HEALTH CHECK
# ═════════════════════════════════════════════════════════════════════════════
{{ m.redisHealthCheck() }}

# ═════════════════════════════════════════════════════════════════════════════
# 🚀 SERVICE
# ═════════════════════════════════════════════════════════════════════════════
{{ m.serviceSection(timeout=300, restart="on-failure") }}

[Install]
# No WantedBy - dependencies via After/Requires
